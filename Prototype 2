# Open the following link to see the prototype: https://claude.site/artifacts/1a3ef9a1-ccfa-4a13-815e-8b55adc9f351

import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Area, AreaChart, Legend } from 'recharts';
import { Bell, CreditCard, Settings, Users, Calendar, DollarSign, RefreshCcw, Building, Globe, Shield, Wallet, TrendingUp, AlertTriangle } from 'lucide-react';

// Mock data with realistic enterprise-scale numbers
const mockTransactions = [
  { id: 1, date: '2024-12-27', amount: 125000000, type: 'Payment', merchant: 'AWS Cloud Infrastructure', status: 'Completed', department: 'Technology' },
  { id: 2, date: '2024-12-27', amount: 85000000, type: 'Payment', merchant: 'Microsoft Enterprise', status: 'Pending', department: 'Operations' },
  { id: 3, date: '2024-12-26', amount: 250000000, type: 'Transfer', merchant: 'Internal Treasury', status: 'Completed', department: 'Finance' },
  { id: 4, date: '2024-12-26', amount: 95000000, type: 'Payment', merchant: 'Google Cloud Platform', status: 'Completed', department: 'Infrastructure' },
  { id: 5, date: '2024-12-25', amount: 175000000, type: 'Investment', merchant: 'Data Center Expansion', status: 'Completed', department: 'Operations' }
];

const mockYearlySpending = [
  { month: 'Jan', amount: 450000000, forecast: 480000000 },
  { month: 'Feb', amount: 520000000, forecast: 500000000 },
  { month: 'Mar', amount: 490000000, forecast: 510000000 },
  { month: 'Apr', amount: 630000000, forecast: 600000000 },
  { month: 'May', amount: 580000000, forecast: 550000000 },
  { month: 'Jun', amount: 720000000, forecast: 700000000 },
  { month: 'Jul', amount: 680000000, forecast: 650000000 },
  { month: 'Aug', amount: 750000000, forecast: 720000000 },
  { month: 'Sep', amount: 820000000, forecast: 800000000 },
  { month: 'Oct', amount: 880000000, forecast: 850000000 },
  { month: 'Nov', amount: 920000000, forecast: 900000000 },
  { month: 'Dec', amount: 980000000, forecast: 950000000 }
];

const departmentSpending = [
  { name: 'Technology', value: 3500000000 },
  { name: 'Operations', value: 2600000000 },
  { name: 'Infrastructure', value: 2200000000 },
  { name: 'R&D', value: 1800000000 },
  { name: 'Sales', value: 1200000000 }
];

const cloudSpending = [
  { name: 'Q1', compute: 280, storage: 120, network: 100, services: 150 },
  { name: 'Q2', compute: 300, storage: 140, network: 110, services: 170 },
  { name: 'Q3', compute: 350, storage: 160, network: 130, services: 190 },
  { name: 'Q4', compute: 400, storage: 180, network: 150, services: 220 }
];

const COLORS = ['#2563eb', '#16a34a', '#ea580c', '#7c3aed', '#be185d'];

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState('overview');
  
  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">Enterprise Treasury Operations</h1>
            <p className="text-gray-500">Global Financial Management Dashboard</p>
          </div>
          <div className="flex gap-4 items-center">
            <div className="bg-yellow-100 text-yellow-800 px-4 py-2 rounded-lg flex items-center">
              <AlertTriangle className="w-4 h-4 mr-2" />
              <span className="text-sm">5 High-Value Pending Approvals ($250M+)</span>
            </div>
            <Bell className="w-6 h-6 text-gray-500" />
            <Settings className="w-6 h-6 text-gray-500" />
          </div>
        </div>

        {/* Quick Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
          <Card>
            <CardContent className="flex items-center p-6">
              <DollarSign className="w-8 h-8 text-blue-500 mr-4" />
              <div>
                <p className="text-sm text-gray-500">Total Balance</p>
                <p className="text-2xl font-bold">$24.5B</p>
                <p className="text-xs text-green-500">+3.2% from last quarter</p>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="flex items-center p-6">
              <RefreshCcw className="w-8 h-8 text-green-500 mr-4" />
              <div>
                <p className="text-sm text-gray-500">Monthly Spend</p>
                <p className="text-2xl font-bold">$980M</p>
                <p className="text-xs text-red-500">+8.9% from last month</p>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="flex items-center p-6">
              <Building className="w-8 h-8 text-purple-500 mr-4" />
              <div>
                <p className="text-sm text-gray-500">Business Units</p>
                <p className="text-2xl font-bold">15</p>
                <p className="text-xs text-gray-500">Across 12 regions</p>
              </div>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="flex items-center p-6">
              <Users className="w-8 h-8 text-orange-500 mr-4" />
              <div>
                <p className="text-sm text-gray-500">Licensed Users</p>
                <p className="text-2xl font-bold">555K</p>
                <p className="text-xs text-green-500">+15K this quarter</p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Main Content */}
        <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
          <TabsList>
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="transactions">Transactions</TabsTrigger>
            <TabsTrigger value="subscriptions">Subscriptions</TabsTrigger>
            <TabsTrigger value="analytics">Analytics</TabsTrigger>
          </TabsList>

          <TabsContent value="overview">
            <div className="grid grid-cols-1 gap-4">
              <Card>
                <CardHeader>
                  <CardTitle>Annual Spending Trends</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="h-96">
                    <ResponsiveContainer width="100%" height="100%">
                      <LineChart data={mockYearlySpending}>
                        <CartesianGrid strokeDasharray="3 3" />
                        <XAxis dataKey="month" />
                        <YAxis tickFormatter={(value) => `$${value/1000000}M`} />
                        <Tooltip formatter={(value) => `$${(value/1000000).toFixed(1)}M`} />
                        <Legend />
                        <Line type="monotone" dataKey="amount" stroke="#2563eb" name="Actual" strokeWidth={2} />
                        <Line type="monotone" dataKey="forecast" stroke="#9ca3af" strokeDasharray="5 5" name="Forecast" />
                      </LineChart>
                    </ResponsiveContainer>
                  </div>
                </CardContent>
              </Card>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <Card>
                  <CardHeader>
                    <CardTitle>Department Budget Distribution</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="h-80">
                      <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                          <Pie
                            data={departmentSpending}
                            cx="50%"
                            cy="50%"
                            innerRadius={60}
                            outerRadius={80}
                            fill="#8884d8"
                            paddingAngle={5}
                            dataKey="value"
                            label={({ name, percent }) => `${name} (${(percent * 100).toFixed(1)}%)`}
                          >
                            {departmentSpending.map((entry, index) => (
                              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                            ))}
                          </Pie>
                          <Tooltip formatter={(value) => `$${(value/1000000).toFixed(0)}M`} />
                        </PieChart>
                      </ResponsiveContainer>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>Cloud Infrastructure Spending</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="h-80">
                      <ResponsiveContainer width="100%" height="100%">
                        <AreaChart data={cloudSpending}>
                          <CartesianGrid strokeDasharray="3 3" />
                          <XAxis dataKey="name" />
                          <YAxis tickFormatter={(value) => `$${value}M`} />
                          <Tooltip formatter={(value) => `$${value}M`} />
                          <Legend />
                          <Area type="monotone" dataKey="compute" stackId="1" stroke="#2563eb" fill="#2563eb" />
                          <Area type="monotone" dataKey="storage" stackId="1" stroke="#16a34a" fill="#16a34a" />
                          <Area type="monotone" dataKey="network" stackId="1" stroke="#ea580c" fill="#ea580c" />
                          <Area type="monotone" dataKey="services" stackId="1" stroke="#7c3aed" fill="#7c3aed" />
                        </AreaChart>
                      </ResponsiveContainer>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </TabsContent>

          <TabsContent value="transactions">
            <Card>
              <CardHeader>
                <CardTitle>Recent High-Value Transactions</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {mockTransactions.map((transaction) => (
                    <div key={transaction.id} className="flex items-center justify-between p-4 bg-white border rounded-lg">
                      <div className="flex items-center">
                        <CreditCard className="w-6 h-6 text-gray-400 mr-4" />
                        <div>
                          <p className="font-medium">{transaction.merchant}</p>
                          <div className="flex space-x-2 text-sm text-gray-500">
                            <span>{transaction.date}</span>
                            <span>•</span>
                            <span>{transaction.department}</span>
                          </div>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="font-medium">${(transaction.amount / 1000000).toFixed(1)}M</p>
                        <p className={`text-sm ${
                          transaction.status === 'Completed' ? 'text-green-500' : 'text-orange-500'
                        }`}>
                          {transaction.status}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="analytics">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card>
                <CardHeader>
                  <CardTitle>Key Metrics</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-500">Average Transaction Value</span>
                      <span className="font-medium">$146M</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-500">Monthly Active Users</span>
                      <span className="font-medium">482K</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-500">Cloud Utilization</span>
                      <span className="font-medium">87%</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-500">Cost per User</span>
                      <span className="font-medium">$1,766</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Dashboard;
